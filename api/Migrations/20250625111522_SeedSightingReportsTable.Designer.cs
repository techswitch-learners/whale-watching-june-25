// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WhaleSpottingBackend.Database;

#nullable disable

namespace WhaleSpottingBackend.Migrations
{
    [DbContext(typeof(WhaleSpottingDbContext))]
    [Migration("20250625111522_SeedSightingReportsTable")]
    partial class SeedSightingReportsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WhaleSpottingBackend.Models.Database.SightingReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfSighting")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("RejectedReason")
                        .HasColumnType("text");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SightingReports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfSighting = new DateOnly(2022, 6, 13),
                            Description = "Whales sighting 1",
                            Latitude = 3.710616f,
                            Longitude = 34534536f,
                            SpeciesId = 1,
                            Status = "pending",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfSighting = new DateOnly(2000, 6, 10),
                            Description = "Whales sighting 2",
                            Latitude = 3.710616f,
                            Longitude = 34534536f,
                            SpeciesId = 1,
                            Status = "pending",
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            DateOfSighting = new DateOnly(2022, 6, 16),
                            Description = "Whales sighting 3",
                            Latitude = 3.710616f,
                            Longitude = 34534536f,
                            SpeciesId = 3,
                            Status = "pending",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateOfSighting = new DateOnly(2025, 6, 18),
                            Description = "Whales sighting 4",
                            Latitude = 3.710616f,
                            Longitude = 34534536f,
                            SpeciesId = 2,
                            Status = "approved",
                            UserId = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
